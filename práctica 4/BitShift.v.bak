module BitShift (
	input iClk,
	output oU[3:0],
	output oD[3:0],
	output oC[3:0],
	output oUM[3:0]
	);


reg rFrec_Q [13:0];
reg rFrec_D [13:0];

assign oUM = rFrec_D[14:11];
assign oC = rFrec_D[10:7];
assign oD = rFrec_D[6:3];
assign oU = rFrec_D[2:0];


always @ (posedge iClk)
begin
	rFrec_Q <= rFrec_D;
end

always @ *
   if 
	begin
	rFrec_D = rFrec_Q;
	end
	
	if(rFrec_D[15:12] > 4 )
	begin
		rFrec_D[15:12] + 14'd3; 
	end
	else 	if(rFrec_D[11:8] > 4 )
	begin
		rFrec_D[11:8] + 14'd3; â€¢
	end
	else 	if(rFrec_D[7:4] > 4 )
	begin
		rFrec_D[7:4] + 14'd3; 
	end
	else 	if(rFrec_D[3:0] > 4 )
	begin
		rFrec_D[3:0] + 14'd3; 
	end
	else
	begin
	rFrec_D = rFrec_Q;
	end
	rFrec_D << 3;
end 